/* @preserve
* Leaflet.MarkerPlayer 0.3.0, a Leaflet plug-in for animating marker with ability to get/set progress.
* https://github.com/0n3byt3/Leaflet.MarkerPlayer
* (c) 2023 0n3byt3
*/
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("leaflet")):"function"==typeof define&&define.amd?define(["exports","leaflet"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).L=t.L||{},t.L)}(this,function(t,u){"use strict";const a=u.Marker.extend({statics:{notStartedState:0,endedState:1,pausedState:2,runState:3},options:{autostart:!1,loop:!1},initialize(t,s,i){if(u.Marker.prototype.initialize.call(this,t[0].latlng,i),this._points=t,s instanceof Array){this._totDuration=s.reduce((t,i)=>t+i),this._durations=s;let i=0;this._accDurations=s.map(t=>i+=t)}else this._totDuration=s,[this._durations,this._accDurations]=this._createDurations(this._points,s);this._currentDuration=0,this._currentIndex=0,this._state=a.notStartedState,this._startTime=0,this._startTimeStamp=0,this._pauseStartTime=0,this._animId=0,this._animRequested=!1,this._currentLine=[],this._stations={},this._progChanged=!1},isRunning(){return this._state===a.runState},isEnded(){return this._state===a.endedState},isStarted(){return this._state!==a.notStartedState},isPaused(){return this._state===a.pausedState},start(){this.isRunning()||(this.isPaused()?this.resume():(this._progChanged||this._loadLine(0),this._startAnimation(),this.fire("start")))},pause(){this.isRunning()&&(this._pauseStartTime=Date.now(),this._state=a.pausedState,this._stopAnimation())},resume(){this.isPaused()&&(this._progChanged||(this._currentLine[0]=Object.assign(Object.assign({},this._points[this._currentIndex]),{latlng:this.getLatLng()}),this._currentDuration-=this._pauseStartTime-this._startTime),this._startAnimation())},stop(t){this.isEnded()?void 0===t&&this.setLatLng(this._points[0].latlng):(this._stopAnimation(),void 0===t&&this.setLatLng(this._points[t=0].latlng),this._state=a.endedState,this._progChanged=!1,this.fire("end",{progress:this.getProgress()}))},addPoint(t,i){this._points.push(t),this._durations.push(i)},moveTo(t,i){this._stopAnimation(),this._points=[Object.assign(Object.assign({},this._points[this._currentIndex]),{latlng:this.getLatLng()}),t],this._durations=[i],this._state=a.notStartedState,this.start(),this.options.loop=!1},addStation(t,i){t>this._points.length-2||t<1||(this._stations[t]=i)},onAdd(t){u.Marker.prototype.onAdd.call(this,t),this.options.autostart&&!this.isStarted()?this.start():this.isRunning()&&this._resumeAnimation()},onRemove(t){u.Marker.prototype.onRemove.call(this,t),this._stopAnimation()},getProgress(t=!1){var i,s,e=this._currentIndex,n=e?this._accDurations[e-1]:0;let a=n;return this._durations[e]&&(i=this._points[e].latlng,s=this._points[e+1].latlng,i=this.getLatLng().distanceTo(i)/u.latLng(i).distanceTo(s),a=n+i*this._durations[e]),t?Math.round(100*a)/100:(s=a/this._totDuration*100,Math.round(100*s)/100)},setProgress(t){let i=!(this._progChanged=!0);this.isRunning()?(this.pause(),i=!0):this.isEnded()&&(this._state=a.notStartedState);var s=this._totDuration*((t=100<t?100:t)<0?0:t)/100,e=(this._durations,this._accDurations);let n=0;for(let t=0,i=e.length;t<i;t++)if(e[t]>=s){n=t;break}t=s-e[n-1];this._loadLine(n),this._animate(this._startTimeStamp+t,!0),i&&this.resume()},setDuration(t){let i=!1;this.isRunning()&&(this.pause(),i=!0);if(t instanceof Array){this._totDuration=t.reduce((t,i)=>t+i),this._durations=t;let i=0;this._accDurations=t.map(t=>i+=t)}else this._totDuration=t,[this._durations,this._accDurations]=this._createDurations(this._points,t);i&&this.resume()},_createDurations(i,s){var e=i.length-1,n=[];let a=0;var r;for(let t=0;t<e;t++)r=u.latLng(i[t+1].latlng).distanceTo(i[t].latlng),n.push(r),a+=r;var h=s/a,o=[],_=[];for(let t=0;t<n.length;t++)o.push(n[t]*h),0===t?_.push(o[t]):t===n.length-1?_.push(s):_.push(_[t-1]+o[t]);return[o,_]},_interpolatePosition(t,i,s,e){e/=s;return u.latLng(t.lat+(e=1<(e=0<e?e:0)?1:e)*(i.lat-t.lat),t.lng+e*(i.lng-t.lng))},_startAnimation(){this._state=a.runState,this._progChanged=!1,this._animId=u.Util.requestAnimFrame(function(t){this._startTime=Date.now(),this._startTimeStamp=t,this._animate(t)},this,!0),this._animRequested=!0},_resumeAnimation(){this._animRequested||(this._animRequested=!0,this._animId=u.Util.requestAnimFrame(function(t){this._animate(t)},this,!0))},_stopAnimation(){this._animRequested&&(u.Util.cancelAnimFrame(this._animId),this._animRequested=!1)},_updatePosition(){var t=Date.now()-this._startTime;this._animate(this._startTimeStamp+t,!0)},_loadLine(t){this._currentIndex=t,this._currentDuration=this._durations[t],this._currentLine=this._points.slice(t,t+2),this.fire("pointchange",{point:this._points[t]})},_updateLine(s){let e=s-this._startTimeStamp;if(!(e<=this._currentDuration)){let t=this._currentIndex,i=this._currentDuration;for(var n;e>i;){if(e-=i,void 0!==(n=this._stations[t+1])){if(e<n)return this.setLatLng(this._points[t+1].latlng),null;e-=n}if(++t>=this._points.length-1){if(this.setLatLng(this._points[this._points.length-1].latlng),this._loadLine(t),!this.options.loop)return this.stop(e),null;this.fire("loop",{progress:this.getProgress()}),t=0}this.setLatLng(this._points[t].latlng),this._loadLine(t),i=this._durations[t]}this._startTimeStamp=s-e,this._startTime=Date.now()-e}return e},_animate(t,i){this._animRequested=!1,this._currentIndex;var t=this._updateLine(t);this.fire("progresschange",{progress:this.getProgress()}),!i&&(this.isEnded()||this.isPaused())||(null!=t&&(t=this._interpolatePosition(u.latLng(this._currentLine[0].latlng),u.latLng(this._currentLine[1].latlng),this._currentDuration,t),this.setLatLng(t)),i)||(this._animRequested=!0,this._animId=u.Util.requestAnimFrame(this._animate,this,!1))}});t.MarkerPlayer=a,t.markerPlayer=function(t,i,s){return new a(t,i,s)}});
//# sourceMappingURL=markerplayer.js.map