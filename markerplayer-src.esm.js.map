{"version":3,"file":"markerplayer-src.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { Marker, latLng, Util } from 'leaflet/dist/leaflet-src.esm.js';\r\nimport type { LatLngExpression, MarkerOptions, Map, LatLng } from 'leaflet';\r\n\r\nexport interface Point {\r\n  latlng: LatLngExpression;\r\n}\r\nexport type Duration = number[] | number;\r\n\r\ninterface MarkerPlayerClass {\r\n  notStartedState: number;\r\n  endedState: number;\r\n  pausedState: number;\r\n  runState: number;\r\n  _startTime: number;\r\n  _startTimeStamp: number;\r\n\r\n  new(points: Point[], duration: Duration, options?: MarkerOptions): any;\r\n\r\n  _animate(timestamp: number): void;\r\n}\r\n\r\nconst MarkerPlayer = Marker.extend({\r\n\t//state constants\r\n\tstatics: {\r\n\t\tnotStartedState: 0,\r\n\t\tendedState: 1,\r\n\t\tpausedState: 2,\r\n\t\trunState: 3\r\n\t},\r\n\r\n\toptions: {\r\n\t\tautostart: false,\r\n\t\tloop: false,\r\n\t},\r\n\r\n\tinitialize(points: Point[], duration: Duration, options?: MarkerOptions) {\r\n\t\t(Marker.prototype as any).initialize.call(this, points[0].latlng, options);\r\n\t\tthis._points = points;\r\n\r\n\t\tif (duration instanceof Array) {\r\n\t\t\tthis._totDuration = duration.reduce((acc, curr) => acc + curr);\r\n\t\t\tthis._durations = duration;\r\n\t\t\tlet sum = 0;\r\n\t\t\tthis._accDurations = duration.map(v => { return sum += v});\r\n\t\t} else {\r\n\t\t\tthis._totDuration = duration;\r\n\t\t\t[this._durations, this._accDurations] = this._createDurations(this._points, duration);\r\n\t\t}\r\n\r\n\t\tthis._currentDuration = 0;\r\n\t\tthis._currentIndex = 0;\r\n\r\n\t\tthis._state = MarkerPlayer.notStartedState;\r\n\t\tthis._startTime = 0;\r\n\t\tthis._startTimeStamp = 0;  // timestamp given by requestAnimFrame\r\n\t\tthis._pauseStartTime = 0;\r\n\t\tthis._animId = 0;\r\n\t\tthis._animRequested = false;\r\n\t\tthis._currentLine = [];\r\n\t\tthis._stations = {};\r\n\t\tthis._progChanged = false;\r\n\t},\r\n\r\n\tisRunning() {\r\n\t\treturn this._state === MarkerPlayer.runState;\r\n\t},\r\n\r\n\tisEnded() {\r\n\t\treturn this._state === MarkerPlayer.endedState;\r\n\t},\r\n\r\n\tisStarted() {\r\n\t\treturn this._state !== MarkerPlayer.notStartedState;\r\n\t},\r\n\r\n\tisPaused() {\r\n\t\treturn this._state === MarkerPlayer.pausedState;\r\n\t},\r\n\r\n\tstart() {\r\n\t\tif (this.isRunning()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.isPaused()) {\r\n\t\t\tthis.resume();\r\n\t\t} else {\r\n\t\t\tif(!this._progChanged)\r\n\t\t\t\tthis._loadLine(0);\r\n\t\t\tthis._startAnimation();\r\n\t\t\tthis.fire('start');\r\n\t\t}\r\n\t},\r\n\r\n\tpause() {\r\n\t\tif (!this.isRunning()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pauseStartTime = Date.now();\r\n\t\tthis._state = MarkerPlayer.pausedState;\r\n\t\tthis._stopAnimation();\r\n\t},\r\n\r\n\tresume() {\r\n\t\tif (!this.isPaused()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!this._progChanged) {\r\n\t\t\t// update the current line\r\n\t\t\tthis._currentLine[0] = {...this._points[this._currentIndex], latlng: this.getLatLng()};\r\n\t\t\tthis._currentDuration -= (this._pauseStartTime - this._startTime);\r\n\t\t}\r\n\t\tthis._startAnimation();\r\n\t},\r\n\r\n\tstop(elapsedTime?: number) { //todo: some work on usercall(first if)\r\n\t\tif (this.isEnded()) {\r\n\t\t\tif(typeof(elapsedTime) === 'undefined') //user call => put marker at fitst point\r\n\t\t\t\tthis.setLatLng(this._points[0].latlng);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._stopAnimation();\r\n\t\tif (typeof(elapsedTime) === 'undefined') { //user call => put marker at fitst point\r\n\t\t\t// user call\r\n\t\t\telapsedTime = 0;\r\n\t\t\t//this._updatePosition();\r\n\t\t\tthis.setLatLng(this._points[0].latlng);\r\n\t\t}\r\n\t\tthis._state = MarkerPlayer.endedState;\r\n\t\tthis._progChanged = false; //important so it wont make double end\r\n\t\tthis.fire('end', {progress: this.getProgress()});\r\n\t},\r\n\r\n\taddPoint(point: LatLngExpression, duration: number) {\r\n\t\t//this._points.push(latLng(latlng));\r\n\t\tthis._points.push(point);\r\n\t\tthis._durations.push(duration);\r\n\t},\r\n\r\n\tmoveTo(point: LatLngExpression, duration: number) {\r\n\t\tthis._stopAnimation();\r\n\t\tthis._points = [{...this._points[this._currentIndex], latlng: this.getLatLng()}, point];\r\n\t\tthis._durations = [duration];\r\n\t\tthis._state = MarkerPlayer.notStartedState;\r\n\t\tthis.start();\r\n\t\tthis.options.loop = false;\r\n\t},\r\n\r\n\taddStation(pointIndex: number, duration: number) {\r\n\t\tif (pointIndex > this._points.length - 2 || pointIndex < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._stations[pointIndex] = duration;\r\n\t},\r\n\r\n\tonAdd(map: Map) {\r\n\t\tMarker.prototype.onAdd.call(this, map);\r\n\r\n\t\tif (this.options.autostart && (!this.isStarted())) {\r\n\t\t\tthis.start();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.isRunning()) {\r\n\t\t\tthis._resumeAnimation();\r\n\t\t}\r\n\t},\r\n\r\n\tonRemove(map: Map) {\r\n\t\tMarker.prototype.onRemove.call(this, map);\r\n\t\tthis._stopAnimation();\r\n\t},\r\n\r\n\t//return anim progress by percentage or by time format\r\n\tgetProgress(timeFormat = false) {\r\n\t\tlet indx = this._currentIndex;\r\n\t\tlet acc = indx? this._accDurations[indx - 1] : 0;\r\n\t\tlet elapsed = acc;\r\n\t\tif(this._durations[indx]) { //in case the p1 = p2 : this._durations[indx] = 0\r\n\t\t\tlet p1 = this._points[indx].latlng;\r\n\t\t\tlet p2 = this._points[indx + 1].latlng;\r\n\t\t\tlet ratio = this.getLatLng().distanceTo(p1) / latLng(p1).distanceTo(p2);\r\n\t\t\telapsed = acc + ratio * this._durations[indx];\r\n\t\t}\r\n\t\tif(timeFormat)\r\n\t\t\treturn Math.round(elapsed * 100) /100;\r\n\t\tlet percnt = elapsed / this._totDuration * 100;\r\n\t\treturn Math.round(percnt * 100) /100;\r\n\t},\r\n\r\n\t//set anim progress by percentage\r\n\tsetProgress(percentage: number) {\r\n\t\tthis._progChanged = true;\r\n\t\tlet isRunning = false;\r\n\t\tif (this.isRunning()) {\r\n\t\t\tthis.pause(); //must be updated to make it still Running on progchange event; should use _progChanged.\r\n\t\t\tisRunning = true;\r\n\t\t} else if(this.isEnded()) { //make setProg possible after end\r\n\t\t\tthis._state = MarkerPlayer.notStartedState;\r\n\t\t}\r\n\t\tlet p = percentage;\r\n\t\tp = (p > 100)? 100 : p;\r\n\t\tp = (p < 0)? 0 : p;\r\n\t\tconst t = this._totDuration * p / 100;\r\n\t\tconst dur = this._durations;\r\n\t\tconst accDur = this._accDurations;\r\n\t\tlet indx = 0;\r\n\t\tfor(let i = 0, len = accDur.length; i < len; i++) {\r\n\t\t\tif(accDur[i] >= t) {\r\n\t\t\t\tindx = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst elapsedTime = t - accDur[indx - 1];\r\n\t\tthis._loadLine(indx);\r\n\t\tthis._animate(this._startTimeStamp + elapsedTime, true);\r\n\t\tif (isRunning)\r\n\t\t\tthis.resume();\r\n\t},\r\n\r\n\t//set new dur for anim\r\n\tsetDuration(newDuration: Duration) {\r\n\t\tlet isRunning = false;\r\n\t\tif (this.isRunning()) {\r\n\t\t\tthis.pause();\r\n\t\t\tisRunning = true;\r\n\t\t}\r\n\t\tlet duration = newDuration;\r\n\t\tif (duration instanceof Array) {\r\n\t\t\tthis._totDuration = duration.reduce((acc, curr) => acc + curr);\r\n\t\t\tthis._durations = duration;\r\n\t\t\tlet sum = 0;\r\n\t\t\tthis._accDurations = duration.map(v => { return sum += v});\r\n\t\t} else {\r\n\t\t\tthis._totDuration = duration;\r\n\t\t\t[this._durations, this._accDurations] = this._createDurations(this._points, duration);\r\n\t\t}\r\n\t\tif (isRunning)\r\n\t\t\tthis.resume();\r\n\t},\r\n\r\n\t_createDurations(points: Point[], duration: number) {\r\n\t\tlet lastIndex = points.length - 1;\r\n\t\tlet distances = [];\r\n\t\tlet totalDistance = 0;\r\n\t\tlet distance = 0;\r\n\r\n\t\t// compute array of distances between points\r\n\t\tfor (let i = 0; i < lastIndex; i++) {\r\n\t\t\tdistance = latLng(points[i + 1].latlng).distanceTo(points[i].latlng);\r\n\t\t\tdistances.push(distance);\r\n\t\t\ttotalDistance += distance;\r\n\t\t}\r\n\r\n\t\tlet ratioDuration = duration / totalDistance;\r\n\r\n\t\tlet durations = [];\r\n\t\tlet accDurations: number[] = []; //accumulative durations\r\n\t\tfor (let i = 0; i < distances.length; i++) {\r\n\t\t\tdurations.push(distances[i] * ratioDuration);\r\n\t\t\tif( i === 0)\r\n\t\t\t\taccDurations.push(durations[i]);\r\n\t\t\telse if( i === distances.length - 1)\r\n\t\t\t\taccDurations.push(duration);\r\n\t\t\telse\r\n\t\t\t\taccDurations.push(accDurations[i-1] + durations[i]);\r\n\t\t}\r\n\r\n\t\treturn [durations, accDurations];\r\n\t},\r\n\r\n\t_interpolatePosition(p1: LatLng, p2: LatLng, duration: number, t: number) {\r\n\t\tlet r = t/duration;\r\n\t\tr = (r > 0) ? r : 0;\r\n\t\tr = (r > 1) ? 1 : r;\r\n\r\n\t\treturn latLng(\r\n\t\t\tp1.lat + r * (p2.lat - p1.lat),\r\n\t\t\tp1.lng + r * (p2.lng - p1.lng)\r\n\t\t);\r\n\t},\r\n\r\n\t_startAnimation() {\r\n\t\tthis._state = MarkerPlayer.runState;\r\n\t\tthis._progChanged = false; //imoortant so it run by default\r\n\t\tthis._animId = Util.requestAnimFrame(function(this: MarkerPlayerClass, timestamp) {\r\n\t\t\tthis._startTime = Date.now();\r\n\t\t\tthis._startTimeStamp = timestamp;\r\n\t\t\tthis._animate(timestamp);\r\n\t\t}, this, true);\r\n\t\tthis._animRequested = true;\r\n\t},\r\n\r\n\t_resumeAnimation() {\r\n\t\tif (!this._animRequested) {\r\n\t\t\tthis._animRequested = true;\r\n\t\t\tthis._animId = Util.requestAnimFrame(function(this: MarkerPlayerClass, timestamp) {\r\n\t\t\t\tthis._animate(timestamp);\r\n\t\t\t}, this, true);\r\n\t\t}\r\n\t},\r\n\r\n\t_stopAnimation() {\r\n\t\tif(this._animRequested) {\r\n\t\t\tUtil.cancelAnimFrame(this._animId);\r\n\t\t\tthis._animRequested = false;\r\n\t\t}\r\n\t},\r\n\r\n\t_updatePosition() {\r\n\t\tlet elapsedTime = Date.now() - this._startTime;\r\n\t\tthis._animate(this._startTimeStamp + elapsedTime, true);\r\n\t},\r\n\r\n\t_loadLine(index: number) {\r\n\t\tthis._currentIndex = index;\r\n\t\tthis._currentDuration = this._durations[index];\r\n\t\tthis._currentLine = this._points.slice(index, index + 2);\r\n\t\tthis.fire('pointchange', { point: this._points[index] });\r\n\t},\r\n\r\n\t/**\r\n\t * Load the line where the marker is\r\n\t * @param  {Number} timestamp\r\n\t * @return {Number} elapsed time on the current line or null if\r\n\t * we reached the end or marker is at a station\r\n\t */\r\n\t_updateLine(timestamp: number) {\r\n\t\t// time elapsed since the last latlng\r\n\t\tlet elapsedTime = timestamp - this._startTimeStamp;\r\n\r\n\t\t// not enough time to update the line\r\n\t\tif (elapsedTime <= this._currentDuration) {\r\n\t\t\treturn elapsedTime;\r\n\t\t}\r\n\r\n\t\tlet lineIndex = this._currentIndex;\r\n\t\tlet lineDuration = this._currentDuration;\r\n\t\tlet stationDuration;\r\n\r\n\t\twhile (elapsedTime > lineDuration) {\r\n\t\t\t// substract time of the current line\r\n\t\t\telapsedTime -= lineDuration;\r\n\t\t\tstationDuration = this._stations[lineIndex + 1];\r\n\r\n\t\t\t// test if there is a station at the end of the line\r\n\t\t\tif (stationDuration !== undefined) {\r\n\t\t\t\tif (elapsedTime < stationDuration) {\r\n\t\t\t\t\tthis.setLatLng(this._points[lineIndex + 1].latlng);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\telapsedTime -= stationDuration;\r\n\t\t\t}\r\n\r\n\t\t\tlineIndex++;\r\n\r\n\t\t\t// test if we have reached the end of the polyline\r\n\t\t\tif (lineIndex >= this._points.length - 1) {\r\n\t\t\t\t// place the marker at the end, else it would be at\r\n\t\t\t\t// the last position\r\n\t\t\t\tthis.setLatLng(this._points[this._points.length - 1].latlng);\r\n\t\t\t\tthis._loadLine(lineIndex);\r\n\t\t\t\tif (this.options.loop) {\r\n\t\t\t\t\tthis.fire('loop', {progress: this.getProgress()});\r\n\t\t\t\t\tlineIndex = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.stop(elapsedTime);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.setLatLng(this._points[lineIndex].latlng);\r\n\t\t\tthis._loadLine(lineIndex);\r\n\t\t\tlineDuration = this._durations[lineIndex];\r\n\t\t}\r\n\r\n\t\tthis._startTimeStamp = timestamp - elapsedTime;\r\n\t\tthis._startTime = Date.now() - elapsedTime;\r\n\t\treturn elapsedTime;\r\n\t},\r\n\r\n\t_animate(timestamp: number, noRequestAnim: boolean) {\r\n\t\tthis._animRequested = false;\r\n\t\tlet indx = this._currentIndex;\r\n\t\t// find the next line and compute the new elapsedTime\r\n\t\tlet elapsedTime = this._updateLine(timestamp);\r\n\t\tthis.fire('progresschange', { progress: this.getProgress() });\r\n\t\tif(!noRequestAnim && (this.isEnded() || this.isPaused())) {\r\n\t\t\t//in case anim stop or puase in event callbacks\r\n\t\t\t// no need to animate; else when noRequestAnim is true, it means\r\n\t\t\t// just update the position(ex: when seeking)\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(elapsedTime != null) {\r\n\t\t\t // compute the position\r\n\t\t\tlet p = this._interpolatePosition(\r\n\t\t\t\tlatLng(this._currentLine[0].latlng),\r\n\t\t\t\tlatLng(this._currentLine[1].latlng),\r\n\t\t\t\tthis._currentDuration,\r\n\t\t\t\telapsedTime\r\n\t\t\t);\r\n\t\t\tthis.setLatLng(p);\r\n\t\t}\r\n\t\tif(!noRequestAnim) {\r\n\t\t\tthis._animRequested = true;\r\n\t\t\tthis._animId = Util.requestAnimFrame(this._animate, this, false);\r\n\t\t}\r\n\t},\r\n}) as unknown as MarkerPlayerClass;\r\n\r\nconst markerPlayer = function (points: Point[], duration: Duration, options?: MarkerOptions) {\r\n\treturn new MarkerPlayer(points, duration, options);\r\n};\r\n\r\nexport {MarkerPlayer, markerPlayer};\r\n"],"names":[],"mappings":"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"}